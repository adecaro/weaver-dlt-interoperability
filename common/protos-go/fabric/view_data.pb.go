// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fabric/view_data.proto

package fabric

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	peer "github.com/hyperledger/fabric-protos-go/peer"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FabricView struct {
	// `Response` from the peers
	// https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal_response.pb.go#L113
	// We only need the `Payload` field though.
	Response *peer.Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	// `ProposalResponsePayload` is the output produced by each peer and signed as a serialized blob
	// https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal_response.pb.go#L176
	// `ProposalResponsePayload` contains an `Extension` field which is of type `ChaincodeAction`
	// https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal.pb.go#L280
	// We only need the `ProposalHash`, `ChaincodeId` and `Response` fields.
	ProposalResponsePayload *peer.ProposalResponsePayload `protobuf:"bytes,3,opt,name=proposal_response_payload,json=proposalResponsePayload,proto3" json:"proposal_response_payload,omitempty"`
	// Each `Endorsement` is an identity coupled with a signature
	// https://github.com/hyperledger/fabric-protos-go/blob/master/peer/proposal_response.pb.go#L242
	Endorsements         []*peer.Endorsement `protobuf:"bytes,4,rep,name=endorsements,proto3" json:"endorsements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FabricView) Reset()         { *m = FabricView{} }
func (m *FabricView) String() string { return proto.CompactTextString(m) }
func (*FabricView) ProtoMessage()    {}
func (*FabricView) Descriptor() ([]byte, []int) {
	return fileDescriptor_f01272ec4e3774d3, []int{0}
}

func (m *FabricView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FabricView.Unmarshal(m, b)
}
func (m *FabricView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FabricView.Marshal(b, m, deterministic)
}
func (m *FabricView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FabricView.Merge(m, src)
}
func (m *FabricView) XXX_Size() int {
	return xxx_messageInfo_FabricView.Size(m)
}
func (m *FabricView) XXX_DiscardUnknown() {
	xxx_messageInfo_FabricView.DiscardUnknown(m)
}

var xxx_messageInfo_FabricView proto.InternalMessageInfo

func (m *FabricView) GetResponse() *peer.Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *FabricView) GetProposalResponsePayload() *peer.ProposalResponsePayload {
	if m != nil {
		return m.ProposalResponsePayload
	}
	return nil
}

func (m *FabricView) GetEndorsements() []*peer.Endorsement {
	if m != nil {
		return m.Endorsements
	}
	return nil
}

func init() {
	proto.RegisterType((*FabricView)(nil), "fabric.FabricView")
}

func init() { proto.RegisterFile("fabric/view_data.proto", fileDescriptor_f01272ec4e3774d3) }

var fileDescriptor_f01272ec4e3774d3 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0xd0, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x05, 0x60, 0xca, 0xca, 0x22, 0x59, 0x0f, 0x52, 0x41, 0xab, 0x08, 0x2e, 0x9e, 0xf6, 0x60,
	0x1b, 0x58, 0x0f, 0xde, 0x05, 0xbd, 0xba, 0xf6, 0xe0, 0x41, 0x0f, 0x25, 0x6d, 0xc6, 0x6e, 0x20,
	0xcd, 0x0c, 0x93, 0xb8, 0xa5, 0xff, 0xd2, 0x9f, 0x24, 0x34, 0x5b, 0x45, 0xf4, 0xfa, 0xe6, 0x7b,
	0x2f, 0x10, 0x71, 0xfa, 0xae, 0x6a, 0x36, 0x8d, 0xdc, 0x19, 0xe8, 0x2b, 0xad, 0x82, 0x2a, 0x88,
	0x31, 0x60, 0x3a, 0x8f, 0xf9, 0xc5, 0x25, 0x01, 0xb0, 0x24, 0x46, 0x42, 0xaf, 0x6c, 0xc5, 0xe0,
	0x09, 0x9d, 0x87, 0xa8, 0xae, 0x3f, 0x13, 0x21, 0x1e, 0x47, 0xf8, 0x62, 0xa0, 0x4f, 0x6f, 0xc4,
	0xe1, 0x04, 0xb2, 0x64, 0x99, 0xac, 0x16, 0xeb, 0xe3, 0x08, 0x7d, 0x51, 0xee, 0xf3, 0xf2, 0x5b,
	0xa4, 0x6f, 0xe2, 0xfc, 0xcf, 0x6e, 0x45, 0x6a, 0xb0, 0xa8, 0x74, 0x36, 0x1b, 0xeb, 0x57, 0x53,
	0x7d, 0xb3, 0x87, 0xd3, 0xcc, 0x26, 0xb2, 0xf2, 0x8c, 0xfe, 0x3f, 0xa4, 0x77, 0xe2, 0x08, 0x9c,
	0x46, 0xf6, 0xd0, 0x81, 0x0b, 0x3e, 0x3b, 0x58, 0xce, 0x56, 0x8b, 0xf5, 0xc9, 0xb4, 0xf7, 0xf0,
	0x73, 0x2b, 0x7f, 0xc1, 0xfb, 0xe7, 0xd7, 0xa7, 0xd6, 0x84, 0xed, 0x47, 0x5d, 0x34, 0xd8, 0xc9,
	0xed, 0x40, 0xc0, 0x16, 0x74, 0x0b, 0x9c, 0x5b, 0x55, 0x7b, 0xd9, 0x83, 0xda, 0x01, 0xe7, 0xda,
	0x86, 0xdc, 0xb8, 0x00, 0x8c, 0x04, 0xac, 0x6a, 0x63, 0x4d, 0x18, 0x64, 0x83, 0x5d, 0x87, 0x4e,
	0xc6, 0x27, 0xf2, 0x16, 0x65, 0xfc, 0xc3, 0x7a, 0x3e, 0x26, 0xb7, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xf1, 0xa1, 0x9c, 0x03, 0x6c, 0x01, 0x00, 0x00,
}
