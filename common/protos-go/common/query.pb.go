// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/query.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// the payload to define the data that is being requested
type Query struct {
	Policy               []string `protobuf:"bytes,1,rep,name=policy,proto3" json:"policy,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	RequestingRelay      string   `protobuf:"bytes,3,opt,name=requesting_relay,json=requestingRelay,proto3" json:"requesting_relay,omitempty"`
	RequestingNetwork    string   `protobuf:"bytes,4,opt,name=requesting_network,json=requestingNetwork,proto3" json:"requesting_network,omitempty"`
	Certificate          string   `protobuf:"bytes,5,opt,name=certificate,proto3" json:"certificate,omitempty"`
	RequestorSignature   string   `protobuf:"bytes,6,opt,name=requestor_signature,json=requestorSignature,proto3" json:"requestor_signature,omitempty"`
	Nonce                string   `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	RequestId            string   `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	RequestingOrg        string   `protobuf:"bytes,9,opt,name=requesting_org,json=requestingOrg,proto3" json:"requesting_org,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_19592898ec3ffa2a, []int{0}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetPolicy() []string {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *Query) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Query) GetRequestingRelay() string {
	if m != nil {
		return m.RequestingRelay
	}
	return ""
}

func (m *Query) GetRequestingNetwork() string {
	if m != nil {
		return m.RequestingNetwork
	}
	return ""
}

func (m *Query) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *Query) GetRequestorSignature() string {
	if m != nil {
		return m.RequestorSignature
	}
	return ""
}

func (m *Query) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *Query) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Query) GetRequestingOrg() string {
	if m != nil {
		return m.RequestingOrg
	}
	return ""
}

func init() {
	proto.RegisterType((*Query)(nil), "common.Query")
}

func init() { proto.RegisterFile("common/query.proto", fileDescriptor_19592898ec3ffa2a) }

var fileDescriptor_19592898ec3ffa2a = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0x87, 0x03, 0xbc, 0x94, 0xb7, 0x63, 0xfc, 0x37, 0x1a, 0xb3, 0x17, 0x13, 0x62, 0x62, 0x82,
	0x87, 0xd2, 0x83, 0xdf, 0xc0, 0x9b, 0x17, 0x09, 0x78, 0xf3, 0x42, 0xb6, 0xed, 0xb8, 0x6c, 0x2c,
	0x3b, 0x65, 0xba, 0x95, 0xf4, 0xeb, 0xf9, 0xc9, 0x0c, 0x4b, 0x11, 0x8e, 0xbf, 0xe7, 0x79, 0x36,
	0xd9, 0x64, 0x00, 0x73, 0x5e, 0xaf, 0xd9, 0xa5, 0x9b, 0x86, 0xa4, 0x9d, 0x56, 0xc2, 0x9e, 0x31,
	0xda, 0xb3, 0x87, 0x9f, 0x3e, 0x0c, 0xe7, 0x3b, 0x8e, 0x77, 0x10, 0x55, 0x5c, 0xda, 0xbc, 0x55,
	0xbd, 0xf1, 0x60, 0x12, 0x2f, 0xba, 0x85, 0x0a, 0x46, 0xba, 0x28, 0x84, 0xea, 0x5a, 0xf5, 0xc7,
	0xbd, 0x49, 0xbc, 0x38, 0x4c, 0x7c, 0x82, 0x2b, 0xa1, 0x4d, 0x43, 0xb5, 0xb7, 0xce, 0x2c, 0x85,
	0x4a, 0xdd, 0xaa, 0x41, 0x48, 0x2e, 0x8f, 0x7c, 0xb1, 0xc3, 0x98, 0x00, 0x9e, 0xa4, 0x8e, 0xfc,
	0x96, 0xe5, 0x4b, 0xfd, 0x0b, 0xf1, 0xf5, 0xd1, 0xbc, 0xed, 0x05, 0x8e, 0xe1, 0x2c, 0x27, 0xf1,
	0xf6, 0xd3, 0xe6, 0xda, 0x93, 0x1a, 0x86, 0xee, 0x14, 0x61, 0x0a, 0x37, 0xdd, 0x33, 0x96, 0x65,
	0x6d, 0x8d, 0xd3, 0xbe, 0x11, 0x52, 0x51, 0x28, 0xf1, 0x4f, 0xbd, 0x1f, 0x0c, 0xde, 0xc2, 0xd0,
	0xb1, 0xcb, 0x49, 0x8d, 0x42, 0xb2, 0x1f, 0x78, 0x0f, 0xd0, 0xb5, 0x4b, 0x5b, 0xa8, 0xff, 0x41,
	0xc5, 0x1d, 0x79, 0x2d, 0xf0, 0x11, 0x2e, 0x4e, 0xbe, 0xcd, 0x62, 0x54, 0x1c, 0x92, 0xf3, 0x23,
	0x9d, 0x89, 0x79, 0x99, 0x7f, 0xcc, 0x8c, 0xf5, 0xab, 0x26, 0x9b, 0xe6, 0xbc, 0x4e, 0x57, 0x6d,
	0x45, 0x52, 0x52, 0x61, 0x48, 0x92, 0x52, 0x67, 0x75, 0xba, 0x25, 0xfd, 0x4d, 0x92, 0x14, 0xa5,
	0x4f, 0xac, 0xf3, 0x24, 0x5c, 0x91, 0xe8, 0xcc, 0x96, 0xd6, 0xb7, 0x69, 0x77, 0x9a, 0x70, 0x94,
	0x3a, 0x31, 0xdc, 0x81, 0x2c, 0x0a, 0xe4, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xd9, 0x71,
	0x88, 0xbc, 0x01, 0x00, 0x00,
}
