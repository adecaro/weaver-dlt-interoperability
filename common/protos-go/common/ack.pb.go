// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/ack.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ack_STATUS int32

const (
	Ack_OK    Ack_STATUS = 0
	Ack_ERROR Ack_STATUS = 1
)

var Ack_STATUS_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var Ack_STATUS_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Ack_STATUS) String() string {
	return proto.EnumName(Ack_STATUS_name, int32(x))
}

func (Ack_STATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2674fafcb0b5709e, []int{0, 0}
}

// This message respresents "ACKs" sent between relay-relay,
// relay-driver and relay-network
type Ack struct {
	Status    Ack_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=common.Ack_STATUS" json:"status,omitempty"`
	RequestId string     `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// an error can have an associated string
	// this is the best way to represent this in protobuf
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_2674fafcb0b5709e, []int{0}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

func (m *Ack) GetStatus() Ack_STATUS {
	if m != nil {
		return m.Status
	}
	return Ack_OK
}

func (m *Ack) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Ack) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("common.Ack_STATUS", Ack_STATUS_name, Ack_STATUS_value)
	proto.RegisterType((*Ack)(nil), "common.Ack")
}

func init() { proto.RegisterFile("common/ack.proto", fileDescriptor_2674fafcb0b5709e) }

var fileDescriptor_2674fafcb0b5709e = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xcf, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x06, 0x60, 0xbb, 0xab, 0x91, 0xce, 0x41, 0x4a, 0x4e, 0x05, 0x11, 0x96, 0x3d, 0x2d, 0x42,
	0x5b, 0xd0, 0x27, 0xa8, 0xe0, 0x41, 0x3c, 0x14, 0xb3, 0xeb, 0xc5, 0x8b, 0xa4, 0xed, 0x90, 0x0d,
	0x4d, 0x37, 0x35, 0x99, 0x2a, 0x7d, 0x02, 0x5f, 0x5b, 0x6c, 0xb3, 0xc7, 0xf9, 0xe6, 0x67, 0x86,
	0x1f, 0x92, 0xc6, 0xf6, 0xbd, 0x3d, 0x15, 0xb2, 0xe9, 0xf2, 0xc1, 0x59, 0xb2, 0x9c, 0x2d, 0xb2,
	0xfd, 0x8d, 0x60, 0x5d, 0x36, 0x1d, 0xbf, 0x07, 0xe6, 0x49, 0xd2, 0xe8, 0xd3, 0xd5, 0x26, 0xda,
	0xdd, 0x3c, 0xf0, 0x7c, 0x09, 0xe4, 0x65, 0xd3, 0xe5, 0xfb, 0x43, 0x79, 0x78, 0xdf, 0x8b, 0x90,
	0xe0, 0x77, 0x00, 0x0e, 0xbf, 0x46, 0xf4, 0xf4, 0xa9, 0xdb, 0x74, 0xbd, 0x89, 0x76, 0xb1, 0x88,
	0x83, 0xbc, 0xb4, 0x3c, 0x85, 0xeb, 0x1e, 0xbd, 0x97, 0x0a, 0xd3, 0xcb, 0x79, 0x77, 0x1e, 0xb7,
	0xb7, 0xc0, 0x96, 0x53, 0x9c, 0xc1, 0xaa, 0x7a, 0x4d, 0x2e, 0x78, 0x0c, 0x57, 0xcf, 0x42, 0x54,
	0x22, 0x89, 0x9e, 0xde, 0x3e, 0x2a, 0xa5, 0xe9, 0x38, 0xd6, 0xff, 0x9f, 0x8b, 0xe3, 0x34, 0xa0,
	0x33, 0xd8, 0x2a, 0x74, 0x99, 0x91, 0xb5, 0x2f, 0x7e, 0x50, 0x7e, 0xa3, 0xcb, 0x5a, 0x43, 0x99,
	0x3e, 0x11, 0x3a, 0x3b, 0xa0, 0x93, 0xb5, 0x36, 0x9a, 0xa6, 0x22, 0xb4, 0x9b, 0x9b, 0xf9, 0x4c,
	0xd9, 0x00, 0x35, 0x9b, 0xe5, 0xf1, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x63, 0x04, 0xc0, 0x56, 0xff,
	0x00, 0x00, 0x00,
}
