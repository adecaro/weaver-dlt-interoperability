// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/state.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Meta_Protocol int32

const (
	Meta_BITCOIN  Meta_Protocol = 0
	Meta_ETHEREUM Meta_Protocol = 1
	Meta_FABRIC   Meta_Protocol = 3
	Meta_CORDA    Meta_Protocol = 4
)

var Meta_Protocol_name = map[int32]string{
	0: "BITCOIN",
	1: "ETHEREUM",
	3: "FABRIC",
	4: "CORDA",
}

var Meta_Protocol_value = map[string]int32{
	"BITCOIN":  0,
	"ETHEREUM": 1,
	"FABRIC":   3,
	"CORDA":    4,
}

func (x Meta_Protocol) String() string {
	return proto.EnumName(Meta_Protocol_name, int32(x))
}

func (Meta_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{0, 0}
}

type RequestState_STATUS int32

const (
	// pending ACK from remote relay
	RequestState_PENDING_ACK RequestState_STATUS = 0
	// Received ACK, waiting for data to be sent from remote relay
	RequestState_PENDING   RequestState_STATUS = 1
	RequestState_ERROR     RequestState_STATUS = 2
	RequestState_COMPLETED RequestState_STATUS = 3
)

var RequestState_STATUS_name = map[int32]string{
	0: "PENDING_ACK",
	1: "PENDING",
	2: "ERROR",
	3: "COMPLETED",
}

var RequestState_STATUS_value = map[string]int32{
	"PENDING_ACK": 0,
	"PENDING":     1,
	"ERROR":       2,
	"COMPLETED":   3,
}

func (x RequestState_STATUS) String() string {
	return proto.EnumName(RequestState_STATUS_name, int32(x))
}

func (RequestState_STATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{3, 0}
}

// Metadata for a View
type Meta struct {
	// Underlying distributed ledger protocol.
	Protocol Meta_Protocol `protobuf:"varint,1,opt,name=protocol,proto3,enum=common.Meta_Protocol" json:"protocol,omitempty"`
	// What notion of time?
	// If the observer and network are synchronizing on a global clock
	// there won't be a need to distinguish between static and dynamic views.
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Notorization, SPV, ZKP, etc. Possibly enum
	ProofType string `protobuf:"bytes,3,opt,name=proof_type,json=proofType,proto3" json:"proof_type,omitempty"`
	// The data field's serialization format (e.g. JSON, XML, Protobuf)
	SerializationFormat  string   `protobuf:"bytes,4,opt,name=serialization_format,json=serializationFormat,proto3" json:"serialization_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{0}
}

func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (m *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(m, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetProtocol() Meta_Protocol {
	if m != nil {
		return m.Protocol
	}
	return Meta_BITCOIN
}

func (m *Meta) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Meta) GetProofType() string {
	if m != nil {
		return m.ProofType
	}
	return ""
}

func (m *Meta) GetSerializationFormat() string {
	if m != nil {
		return m.SerializationFormat
	}
	return ""
}

type View struct {
	Meta *Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Represents the data playload of this view.
	// The representation of Fabric, Corda etc will be captured elsewhere.
	// For some protocols, like Bitcoin, the structure of an SPV proof is well known.
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *View) Reset()         { *m = View{} }
func (m *View) String() string { return proto.CompactTextString(m) }
func (*View) ProtoMessage()    {}
func (*View) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{1}
}

func (m *View) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_View.Unmarshal(m, b)
}
func (m *View) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_View.Marshal(b, m, deterministic)
}
func (m *View) XXX_Merge(src proto.Message) {
	xxx_messageInfo_View.Merge(m, src)
}
func (m *View) XXX_Size() int {
	return xxx_messageInfo_View.Size(m)
}
func (m *View) XXX_DiscardUnknown() {
	xxx_messageInfo_View.DiscardUnknown(m)
}

var xxx_messageInfo_View proto.InternalMessageInfo

func (m *View) GetMeta() *Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *View) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// View represents the response from a remote network
type ViewPayload struct {
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are valid to be assigned to State:
	//	*ViewPayload_View
	//	*ViewPayload_Error
	State                isViewPayload_State `protobuf_oneof:"state"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ViewPayload) Reset()         { *m = ViewPayload{} }
func (m *ViewPayload) String() string { return proto.CompactTextString(m) }
func (*ViewPayload) ProtoMessage()    {}
func (*ViewPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{2}
}

func (m *ViewPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViewPayload.Unmarshal(m, b)
}
func (m *ViewPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViewPayload.Marshal(b, m, deterministic)
}
func (m *ViewPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewPayload.Merge(m, src)
}
func (m *ViewPayload) XXX_Size() int {
	return xxx_messageInfo_ViewPayload.Size(m)
}
func (m *ViewPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewPayload.DiscardUnknown(m)
}

var xxx_messageInfo_ViewPayload proto.InternalMessageInfo

func (m *ViewPayload) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

type isViewPayload_State interface {
	isViewPayload_State()
}

type ViewPayload_View struct {
	View *View `protobuf:"bytes,2,opt,name=view,proto3,oneof"`
}

type ViewPayload_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ViewPayload_View) isViewPayload_State() {}

func (*ViewPayload_Error) isViewPayload_State() {}

func (m *ViewPayload) GetState() isViewPayload_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *ViewPayload) GetView() *View {
	if x, ok := m.GetState().(*ViewPayload_View); ok {
		return x.View
	}
	return nil
}

func (m *ViewPayload) GetError() string {
	if x, ok := m.GetState().(*ViewPayload_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ViewPayload) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ViewPayload_View)(nil),
		(*ViewPayload_Error)(nil),
	}
}

// the payload that is used for the communication between the requesting relay
// and its network
type RequestState struct {
	RequestId string              `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    RequestState_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=common.RequestState_STATUS" json:"status,omitempty"`
	// Types that are valid to be assigned to State:
	//	*RequestState_View
	//	*RequestState_Error
	State                isRequestState_State `protobuf_oneof:"state"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RequestState) Reset()         { *m = RequestState{} }
func (m *RequestState) String() string { return proto.CompactTextString(m) }
func (*RequestState) ProtoMessage()    {}
func (*RequestState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b87151e42d73a9b3, []int{3}
}

func (m *RequestState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestState.Unmarshal(m, b)
}
func (m *RequestState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestState.Marshal(b, m, deterministic)
}
func (m *RequestState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestState.Merge(m, src)
}
func (m *RequestState) XXX_Size() int {
	return xxx_messageInfo_RequestState.Size(m)
}
func (m *RequestState) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestState.DiscardUnknown(m)
}

var xxx_messageInfo_RequestState proto.InternalMessageInfo

func (m *RequestState) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *RequestState) GetStatus() RequestState_STATUS {
	if m != nil {
		return m.Status
	}
	return RequestState_PENDING_ACK
}

type isRequestState_State interface {
	isRequestState_State()
}

type RequestState_View struct {
	View *View `protobuf:"bytes,3,opt,name=view,proto3,oneof"`
}

type RequestState_Error struct {
	Error string `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*RequestState_View) isRequestState_State() {}

func (*RequestState_Error) isRequestState_State() {}

func (m *RequestState) GetState() isRequestState_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *RequestState) GetView() *View {
	if x, ok := m.GetState().(*RequestState_View); ok {
		return x.View
	}
	return nil
}

func (m *RequestState) GetError() string {
	if x, ok := m.GetState().(*RequestState_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestState) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestState_View)(nil),
		(*RequestState_Error)(nil),
	}
}

func init() {
	proto.RegisterEnum("common.Meta_Protocol", Meta_Protocol_name, Meta_Protocol_value)
	proto.RegisterEnum("common.RequestState_STATUS", RequestState_STATUS_name, RequestState_STATUS_value)
	proto.RegisterType((*Meta)(nil), "common.Meta")
	proto.RegisterType((*View)(nil), "common.View")
	proto.RegisterType((*ViewPayload)(nil), "common.ViewPayload")
	proto.RegisterType((*RequestState)(nil), "common.RequestState")
}

func init() { proto.RegisterFile("common/state.proto", fileDescriptor_b87151e42d73a9b3) }

var fileDescriptor_b87151e42d73a9b3 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0xc5, 0xc1, 0x10, 0x7c, 0xa1, 0xa9, 0x35, 0x7d, 0x08, 0xa9, 0xad, 0x84, 0xbc, 0xca, 0x06,
	0x50, 0xc8, 0x36, 0x8b, 0xf2, 0x70, 0x8a, 0xd5, 0x82, 0xe9, 0xe0, 0x74, 0xd1, 0x0d, 0x1a, 0xe2,
	0x1b, 0x32, 0x92, 0xcd, 0x38, 0xe3, 0x21, 0xc8, 0xfd, 0xe1, 0xaa, 0x7f, 0x51, 0x79, 0xec, 0x50,
	0xb2, 0x6a, 0x76, 0xf6, 0x39, 0x77, 0xce, 0x63, 0xee, 0x00, 0xb9, 0x15, 0x71, 0x2c, 0xb6, 0xfd,
	0x54, 0x31, 0x85, 0xbd, 0x44, 0x0a, 0x25, 0x48, 0xbd, 0xc0, 0x9c, 0xdf, 0x06, 0x98, 0x33, 0x54,
	0x8c, 0x5c, 0x40, 0x43, 0x33, 0xb7, 0x22, 0x6a, 0x1b, 0x1d, 0xe3, 0xfc, 0x6c, 0xf0, 0xae, 0x57,
	0xcc, 0xf4, 0x72, 0xbe, 0xb7, 0x28, 0x49, 0x7a, 0x18, 0x23, 0x1f, 0xc1, 0x52, 0x3c, 0xc6, 0x54,
	0xb1, 0x38, 0x69, 0x9f, 0x74, 0x8c, 0x73, 0x8b, 0xfe, 0x03, 0xc8, 0x27, 0x80, 0x44, 0x0a, 0x71,
	0xb7, 0x52, 0x59, 0x82, 0xed, 0x6a, 0x41, 0x6b, 0x24, 0xc8, 0x12, 0x24, 0x17, 0xf0, 0x36, 0x45,
	0xc9, 0x59, 0xc4, 0x7f, 0x31, 0xc5, 0xc5, 0x76, 0x75, 0x27, 0x64, 0xcc, 0x54, 0xdb, 0xd4, 0x83,
	0x6f, 0x9e, 0x71, 0xd7, 0x9a, 0x72, 0xae, 0xa0, 0xf1, 0x94, 0x82, 0x34, 0xe1, 0x74, 0xe4, 0x05,
	0x63, 0xdf, 0x9b, 0xdb, 0x15, 0xd2, 0x82, 0x86, 0x1b, 0x4c, 0x5d, 0xea, 0xde, 0xcc, 0x6c, 0x83,
	0x00, 0xd4, 0xaf, 0x87, 0x23, 0xea, 0x8d, 0xed, 0x2a, 0xb1, 0xa0, 0x36, 0xf6, 0xe9, 0x64, 0x68,
	0x9b, 0xce, 0x15, 0x98, 0x3f, 0x38, 0xee, 0x49, 0x07, 0xcc, 0x18, 0x15, 0xd3, 0x25, 0x9b, 0x83,
	0xd6, 0x71, 0x49, 0xaa, 0x19, 0x42, 0xc0, 0x0c, 0x99, 0x62, 0xba, 0x52, 0x8b, 0xea, 0x6f, 0xe7,
	0x01, 0x9a, 0xf9, 0xe9, 0x05, 0xcb, 0x22, 0xc1, 0xc2, 0xbc, 0x9c, 0xc4, 0x87, 0x1d, 0xa6, 0x6a,
	0xc5, 0x43, 0x2d, 0x65, 0x51, 0xab, 0x44, 0xbc, 0x90, 0x38, 0x60, 0x3e, 0x72, 0xdc, 0x6b, 0x85,
	0x23, 0x8f, 0x5c, 0x61, 0x5a, 0xa1, 0x9a, 0x23, 0xef, 0xa1, 0x86, 0x52, 0x0a, 0x59, 0x5c, 0xcd,
	0xb4, 0x42, 0x8b, 0xdf, 0xd1, 0x29, 0xd4, 0xf4, 0xa2, 0x9c, 0x3f, 0x06, 0xb4, 0x68, 0x21, 0xb9,
	0xcc, 0x81, 0xff, 0x99, 0x5e, 0x42, 0x3d, 0x3f, 0xb8, 0x4b, 0xb5, 0xed, 0xd9, 0xe0, 0xc3, 0x93,
	0xed, 0xb1, 0x48, 0x6f, 0x19, 0x0c, 0x83, 0x9b, 0x25, 0x2d, 0x47, 0x0f, 0x49, 0xab, 0x2f, 0x49,
	0x6a, 0x3e, 0x4b, 0xea, 0x7c, 0x86, 0x7a, 0xa1, 0x46, 0x5e, 0x43, 0x73, 0xe1, 0xce, 0x27, 0xde,
	0xfc, 0xcb, 0x6a, 0x38, 0xfe, 0x6a, 0x57, 0xf2, 0xf5, 0x94, 0x80, 0x6d, 0xe4, 0x4b, 0x70, 0x29,
	0xf5, 0xa9, 0x7d, 0x42, 0x5e, 0x81, 0x35, 0xf6, 0x67, 0x8b, 0x6f, 0x6e, 0xe0, 0x4e, 0xec, 0xea,
	0xa1, 0xeb, 0xe8, 0xfb, 0x4f, 0x7f, 0xc3, 0xd5, 0xfd, 0x6e, 0x9d, 0x07, 0xe8, 0xdf, 0x67, 0x09,
	0xca, 0x08, 0xc3, 0x0d, 0xca, 0x6e, 0xc4, 0xd6, 0x69, 0x7f, 0x8f, 0xec, 0x11, 0x65, 0x37, 0x8c,
	0x54, 0x97, 0x6f, 0x15, 0x4a, 0x91, 0xa0, 0x64, 0x6b, 0x1e, 0x71, 0x95, 0xf5, 0xcb, 0xc7, 0xad,
	0x5f, 0x65, 0xda, 0xdd, 0x88, 0x12, 0x58, 0xd7, 0x35, 0x72, 0xf9, 0x37, 0x00, 0x00, 0xff, 0xff,
	0xbd, 0xe7, 0xe8, 0x66, 0xfe, 0x02, 0x00, 0x00,
}
