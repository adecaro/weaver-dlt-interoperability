// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/asset_locks.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LockMechanism int32

const (
	LockMechanism_HTLC LockMechanism = 0
)

var LockMechanism_name = map[int32]string{
	0: "HTLC",
}

var LockMechanism_value = map[string]int32{
	"HTLC": 0,
}

func (x LockMechanism) String() string {
	return proto.EnumName(LockMechanism_name, int32(x))
}

func (LockMechanism) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{0}
}

type AssetLockHTLC_TimeSpec int32

const (
	AssetLockHTLC_EPOCH    AssetLockHTLC_TimeSpec = 0
	AssetLockHTLC_DURATION AssetLockHTLC_TimeSpec = 1
)

var AssetLockHTLC_TimeSpec_name = map[int32]string{
	0: "EPOCH",
	1: "DURATION",
}

var AssetLockHTLC_TimeSpec_value = map[string]int32{
	"EPOCH":    0,
	"DURATION": 1,
}

func (x AssetLockHTLC_TimeSpec) String() string {
	return proto.EnumName(AssetLockHTLC_TimeSpec_name, int32(x))
}

func (AssetLockHTLC_TimeSpec) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{2, 0}
}

type AssetLock struct {
	LockMechanism        LockMechanism `protobuf:"varint,1,opt,name=lockMechanism,proto3,enum=common.LockMechanism" json:"lockMechanism,omitempty"`
	LockInfo             []byte        `protobuf:"bytes,2,opt,name=lockInfo,proto3" json:"lockInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AssetLock) Reset()         { *m = AssetLock{} }
func (m *AssetLock) String() string { return proto.CompactTextString(m) }
func (*AssetLock) ProtoMessage()    {}
func (*AssetLock) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{0}
}

func (m *AssetLock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetLock.Unmarshal(m, b)
}
func (m *AssetLock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetLock.Marshal(b, m, deterministic)
}
func (m *AssetLock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetLock.Merge(m, src)
}
func (m *AssetLock) XXX_Size() int {
	return xxx_messageInfo_AssetLock.Size(m)
}
func (m *AssetLock) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetLock.DiscardUnknown(m)
}

var xxx_messageInfo_AssetLock proto.InternalMessageInfo

func (m *AssetLock) GetLockMechanism() LockMechanism {
	if m != nil {
		return m.LockMechanism
	}
	return LockMechanism_HTLC
}

func (m *AssetLock) GetLockInfo() []byte {
	if m != nil {
		return m.LockInfo
	}
	return nil
}

type AssetClaim struct {
	LockMechanism        LockMechanism `protobuf:"varint,1,opt,name=lockMechanism,proto3,enum=common.LockMechanism" json:"lockMechanism,omitempty"`
	ClaimInfo            []byte        `protobuf:"bytes,2,opt,name=claimInfo,proto3" json:"claimInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AssetClaim) Reset()         { *m = AssetClaim{} }
func (m *AssetClaim) String() string { return proto.CompactTextString(m) }
func (*AssetClaim) ProtoMessage()    {}
func (*AssetClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{1}
}

func (m *AssetClaim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetClaim.Unmarshal(m, b)
}
func (m *AssetClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetClaim.Marshal(b, m, deterministic)
}
func (m *AssetClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetClaim.Merge(m, src)
}
func (m *AssetClaim) XXX_Size() int {
	return xxx_messageInfo_AssetClaim.Size(m)
}
func (m *AssetClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetClaim.DiscardUnknown(m)
}

var xxx_messageInfo_AssetClaim proto.InternalMessageInfo

func (m *AssetClaim) GetLockMechanism() LockMechanism {
	if m != nil {
		return m.LockMechanism
	}
	return LockMechanism_HTLC
}

func (m *AssetClaim) GetClaimInfo() []byte {
	if m != nil {
		return m.ClaimInfo
	}
	return nil
}

type AssetLockHTLC struct {
	HashBase64           []byte                 `protobuf:"bytes,1,opt,name=hashBase64,proto3" json:"hashBase64,omitempty"`
	ExpiryTimeSecs       uint64                 `protobuf:"varint,2,opt,name=expiryTimeSecs,proto3" json:"expiryTimeSecs,omitempty"`
	TimeSpec             AssetLockHTLC_TimeSpec `protobuf:"varint,3,opt,name=timeSpec,proto3,enum=common.AssetLockHTLC_TimeSpec" json:"timeSpec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AssetLockHTLC) Reset()         { *m = AssetLockHTLC{} }
func (m *AssetLockHTLC) String() string { return proto.CompactTextString(m) }
func (*AssetLockHTLC) ProtoMessage()    {}
func (*AssetLockHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{2}
}

func (m *AssetLockHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetLockHTLC.Unmarshal(m, b)
}
func (m *AssetLockHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetLockHTLC.Marshal(b, m, deterministic)
}
func (m *AssetLockHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetLockHTLC.Merge(m, src)
}
func (m *AssetLockHTLC) XXX_Size() int {
	return xxx_messageInfo_AssetLockHTLC.Size(m)
}
func (m *AssetLockHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetLockHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_AssetLockHTLC proto.InternalMessageInfo

func (m *AssetLockHTLC) GetHashBase64() []byte {
	if m != nil {
		return m.HashBase64
	}
	return nil
}

func (m *AssetLockHTLC) GetExpiryTimeSecs() uint64 {
	if m != nil {
		return m.ExpiryTimeSecs
	}
	return 0
}

func (m *AssetLockHTLC) GetTimeSpec() AssetLockHTLC_TimeSpec {
	if m != nil {
		return m.TimeSpec
	}
	return AssetLockHTLC_EPOCH
}

type AssetClaimHTLC struct {
	HashPreimageBase64   []byte   `protobuf:"bytes,1,opt,name=hashPreimageBase64,proto3" json:"hashPreimageBase64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetClaimHTLC) Reset()         { *m = AssetClaimHTLC{} }
func (m *AssetClaimHTLC) String() string { return proto.CompactTextString(m) }
func (*AssetClaimHTLC) ProtoMessage()    {}
func (*AssetClaimHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{3}
}

func (m *AssetClaimHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetClaimHTLC.Unmarshal(m, b)
}
func (m *AssetClaimHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetClaimHTLC.Marshal(b, m, deterministic)
}
func (m *AssetClaimHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetClaimHTLC.Merge(m, src)
}
func (m *AssetClaimHTLC) XXX_Size() int {
	return xxx_messageInfo_AssetClaimHTLC.Size(m)
}
func (m *AssetClaimHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetClaimHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_AssetClaimHTLC proto.InternalMessageInfo

func (m *AssetClaimHTLC) GetHashPreimageBase64() []byte {
	if m != nil {
		return m.HashPreimageBase64
	}
	return nil
}

type AssetExchangeAgreement struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Locker               string   `protobuf:"bytes,3,opt,name=locker,proto3" json:"locker,omitempty"`
	Recipient            string   `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssetExchangeAgreement) Reset()         { *m = AssetExchangeAgreement{} }
func (m *AssetExchangeAgreement) String() string { return proto.CompactTextString(m) }
func (*AssetExchangeAgreement) ProtoMessage()    {}
func (*AssetExchangeAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{4}
}

func (m *AssetExchangeAgreement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetExchangeAgreement.Unmarshal(m, b)
}
func (m *AssetExchangeAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetExchangeAgreement.Marshal(b, m, deterministic)
}
func (m *AssetExchangeAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetExchangeAgreement.Merge(m, src)
}
func (m *AssetExchangeAgreement) XXX_Size() int {
	return xxx_messageInfo_AssetExchangeAgreement.Size(m)
}
func (m *AssetExchangeAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetExchangeAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_AssetExchangeAgreement proto.InternalMessageInfo

func (m *AssetExchangeAgreement) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AssetExchangeAgreement) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssetExchangeAgreement) GetLocker() string {
	if m != nil {
		return m.Locker
	}
	return ""
}

func (m *AssetExchangeAgreement) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type FungibleAssetExchangeAgreement struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	NumUnits             uint64   `protobuf:"varint,2,opt,name=numUnits,proto3" json:"numUnits,omitempty"`
	Locker               string   `protobuf:"bytes,3,opt,name=locker,proto3" json:"locker,omitempty"`
	Recipient            string   `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FungibleAssetExchangeAgreement) Reset()         { *m = FungibleAssetExchangeAgreement{} }
func (m *FungibleAssetExchangeAgreement) String() string { return proto.CompactTextString(m) }
func (*FungibleAssetExchangeAgreement) ProtoMessage()    {}
func (*FungibleAssetExchangeAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{5}
}

func (m *FungibleAssetExchangeAgreement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FungibleAssetExchangeAgreement.Unmarshal(m, b)
}
func (m *FungibleAssetExchangeAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FungibleAssetExchangeAgreement.Marshal(b, m, deterministic)
}
func (m *FungibleAssetExchangeAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FungibleAssetExchangeAgreement.Merge(m, src)
}
func (m *FungibleAssetExchangeAgreement) XXX_Size() int {
	return xxx_messageInfo_FungibleAssetExchangeAgreement.Size(m)
}
func (m *FungibleAssetExchangeAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_FungibleAssetExchangeAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_FungibleAssetExchangeAgreement proto.InternalMessageInfo

func (m *FungibleAssetExchangeAgreement) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FungibleAssetExchangeAgreement) GetNumUnits() uint64 {
	if m != nil {
		return m.NumUnits
	}
	return 0
}

func (m *FungibleAssetExchangeAgreement) GetLocker() string {
	if m != nil {
		return m.Locker
	}
	return ""
}

func (m *FungibleAssetExchangeAgreement) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type AssetContractHTLC struct {
	ContractId           string                  `protobuf:"bytes,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	Agreement            *AssetExchangeAgreement `protobuf:"bytes,2,opt,name=agreement,proto3" json:"agreement,omitempty"`
	Lock                 *AssetLockHTLC          `protobuf:"bytes,3,opt,name=lock,proto3" json:"lock,omitempty"`
	Claim                *AssetClaimHTLC         `protobuf:"bytes,4,opt,name=claim,proto3" json:"claim,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AssetContractHTLC) Reset()         { *m = AssetContractHTLC{} }
func (m *AssetContractHTLC) String() string { return proto.CompactTextString(m) }
func (*AssetContractHTLC) ProtoMessage()    {}
func (*AssetContractHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{6}
}

func (m *AssetContractHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssetContractHTLC.Unmarshal(m, b)
}
func (m *AssetContractHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssetContractHTLC.Marshal(b, m, deterministic)
}
func (m *AssetContractHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssetContractHTLC.Merge(m, src)
}
func (m *AssetContractHTLC) XXX_Size() int {
	return xxx_messageInfo_AssetContractHTLC.Size(m)
}
func (m *AssetContractHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_AssetContractHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_AssetContractHTLC proto.InternalMessageInfo

func (m *AssetContractHTLC) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *AssetContractHTLC) GetAgreement() *AssetExchangeAgreement {
	if m != nil {
		return m.Agreement
	}
	return nil
}

func (m *AssetContractHTLC) GetLock() *AssetLockHTLC {
	if m != nil {
		return m.Lock
	}
	return nil
}

func (m *AssetContractHTLC) GetClaim() *AssetClaimHTLC {
	if m != nil {
		return m.Claim
	}
	return nil
}

type FungibleAssetContractHTLC struct {
	ContractId           string                          `protobuf:"bytes,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	Agreement            *FungibleAssetExchangeAgreement `protobuf:"bytes,2,opt,name=agreement,proto3" json:"agreement,omitempty"`
	Lock                 *AssetLockHTLC                  `protobuf:"bytes,3,opt,name=lock,proto3" json:"lock,omitempty"`
	Claim                *AssetClaimHTLC                 `protobuf:"bytes,4,opt,name=claim,proto3" json:"claim,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *FungibleAssetContractHTLC) Reset()         { *m = FungibleAssetContractHTLC{} }
func (m *FungibleAssetContractHTLC) String() string { return proto.CompactTextString(m) }
func (*FungibleAssetContractHTLC) ProtoMessage()    {}
func (*FungibleAssetContractHTLC) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f345bd8ba66b080, []int{7}
}

func (m *FungibleAssetContractHTLC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FungibleAssetContractHTLC.Unmarshal(m, b)
}
func (m *FungibleAssetContractHTLC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FungibleAssetContractHTLC.Marshal(b, m, deterministic)
}
func (m *FungibleAssetContractHTLC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FungibleAssetContractHTLC.Merge(m, src)
}
func (m *FungibleAssetContractHTLC) XXX_Size() int {
	return xxx_messageInfo_FungibleAssetContractHTLC.Size(m)
}
func (m *FungibleAssetContractHTLC) XXX_DiscardUnknown() {
	xxx_messageInfo_FungibleAssetContractHTLC.DiscardUnknown(m)
}

var xxx_messageInfo_FungibleAssetContractHTLC proto.InternalMessageInfo

func (m *FungibleAssetContractHTLC) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

func (m *FungibleAssetContractHTLC) GetAgreement() *FungibleAssetExchangeAgreement {
	if m != nil {
		return m.Agreement
	}
	return nil
}

func (m *FungibleAssetContractHTLC) GetLock() *AssetLockHTLC {
	if m != nil {
		return m.Lock
	}
	return nil
}

func (m *FungibleAssetContractHTLC) GetClaim() *AssetClaimHTLC {
	if m != nil {
		return m.Claim
	}
	return nil
}

func init() {
	proto.RegisterEnum("common.LockMechanism", LockMechanism_name, LockMechanism_value)
	proto.RegisterEnum("common.AssetLockHTLC_TimeSpec", AssetLockHTLC_TimeSpec_name, AssetLockHTLC_TimeSpec_value)
	proto.RegisterType((*AssetLock)(nil), "common.AssetLock")
	proto.RegisterType((*AssetClaim)(nil), "common.AssetClaim")
	proto.RegisterType((*AssetLockHTLC)(nil), "common.AssetLockHTLC")
	proto.RegisterType((*AssetClaimHTLC)(nil), "common.AssetClaimHTLC")
	proto.RegisterType((*AssetExchangeAgreement)(nil), "common.AssetExchangeAgreement")
	proto.RegisterType((*FungibleAssetExchangeAgreement)(nil), "common.FungibleAssetExchangeAgreement")
	proto.RegisterType((*AssetContractHTLC)(nil), "common.AssetContractHTLC")
	proto.RegisterType((*FungibleAssetContractHTLC)(nil), "common.FungibleAssetContractHTLC")
}

func init() { proto.RegisterFile("common/asset_locks.proto", fileDescriptor_2f345bd8ba66b080) }

var fileDescriptor_2f345bd8ba66b080 = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xdd, 0x6e, 0xd3, 0x4c,
	0x10, 0xad, 0xf3, 0xa5, 0x91, 0x3d, 0xf9, 0x51, 0xbe, 0x95, 0x88, 0xd2, 0x0a, 0x45, 0x95, 0x91,
	0xaa, 0x82, 0x48, 0x22, 0x15, 0xc4, 0x05, 0x70, 0x41, 0x9a, 0x16, 0x35, 0x52, 0x20, 0x65, 0x49,
	0x6f, 0xb8, 0x41, 0x1b, 0x7b, 0x70, 0x56, 0xb5, 0xbd, 0xd6, 0x7a, 0x03, 0xcd, 0x0b, 0xf0, 0x4c,
	0x3c, 0x03, 0x8f, 0xc0, 0xd3, 0xa0, 0xdd, 0xd8, 0x49, 0xdc, 0x22, 0xa4, 0x82, 0xc4, 0x9d, 0xe7,
	0xcc, 0xd9, 0x99, 0x73, 0x66, 0xd6, 0x0b, 0x6d, 0x4f, 0x44, 0x91, 0x88, 0xfb, 0x2c, 0x4d, 0x51,
	0x7d, 0x0c, 0x85, 0x77, 0x95, 0xf6, 0x12, 0x29, 0x94, 0x20, 0x95, 0x55, 0xc6, 0xf5, 0xc1, 0x19,
	0xe8, 0xe4, 0x58, 0x78, 0x57, 0xe4, 0x05, 0xd4, 0x35, 0xe7, 0x0d, 0x7a, 0x73, 0x16, 0xf3, 0x34,
	0x6a, 0x5b, 0x07, 0xd6, 0x51, 0xe3, 0xf8, 0x5e, 0x6f, 0x45, 0xee, 0x8d, 0xb7, 0x93, 0xb4, 0xc8,
	0x25, 0xfb, 0x60, 0x6b, 0x60, 0x14, 0x7f, 0x12, 0xed, 0xd2, 0x81, 0x75, 0x54, 0xa3, 0xeb, 0xd8,
	0x0d, 0x00, 0x4c, 0x97, 0x61, 0xc8, 0x78, 0xf4, 0x77, 0x6d, 0xee, 0x83, 0xe3, 0xe9, 0x2a, 0x5b,
	0x7d, 0x36, 0x80, 0xfb, 0xcd, 0x82, 0xfa, 0xda, 0xcf, 0xf9, 0x74, 0x3c, 0x24, 0x1d, 0x80, 0x39,
	0x4b, 0xe7, 0x27, 0x2c, 0xc5, 0x67, 0x4f, 0x4d, 0xa7, 0x1a, 0xdd, 0x42, 0xc8, 0x21, 0x34, 0xf0,
	0x3a, 0xe1, 0x72, 0x39, 0xe5, 0x11, 0xbe, 0x47, 0x2f, 0x35, 0x45, 0xcb, 0xf4, 0x06, 0x4a, 0x9e,
	0x83, 0xad, 0xf4, 0x77, 0x82, 0x5e, 0xfb, 0x3f, 0xa3, 0xb7, 0x93, 0xeb, 0x2d, 0x34, 0xec, 0x4d,
	0x33, 0x16, 0x5d, 0xf3, 0xdd, 0x07, 0x60, 0xe7, 0x28, 0x71, 0x60, 0xf7, 0xec, 0x62, 0x32, 0x3c,
	0x6f, 0xee, 0x90, 0x1a, 0xd8, 0xa7, 0x97, 0x74, 0x30, 0x1d, 0x4d, 0xde, 0x36, 0x2d, 0xf7, 0x15,
	0x34, 0x36, 0x33, 0x32, 0xd2, 0x7b, 0x40, 0xb4, 0xd0, 0x0b, 0x89, 0x3c, 0x62, 0x01, 0x16, 0x2c,
	0xfc, 0x22, 0xe3, 0x4a, 0x68, 0x99, 0x0a, 0x67, 0xd7, 0x7a, 0x58, 0x01, 0x0e, 0x02, 0x89, 0x18,
	0x61, 0xac, 0x08, 0x81, 0xb2, 0x5a, 0x26, 0x68, 0xce, 0x3a, 0xd4, 0x7c, 0x93, 0x06, 0x94, 0xb8,
	0x6f, 0xcc, 0x3a, 0xb4, 0xc4, 0x7d, 0xd2, 0x82, 0x8a, 0x9e, 0x34, 0x4a, 0x63, 0xcf, 0xa1, 0x59,
	0xa4, 0x07, 0x2e, 0xd1, 0xe3, 0x09, 0xc7, 0x58, 0xb5, 0xcb, 0x26, 0xb5, 0x01, 0xdc, 0xaf, 0x16,
	0x74, 0x5e, 0x2f, 0xe2, 0x80, 0xcf, 0x42, 0xbc, 0x43, 0xf3, 0x7d, 0xb0, 0xe3, 0x45, 0x74, 0x19,
	0x73, 0x95, 0xcf, 0x7b, 0x1d, 0xff, 0xa1, 0x90, 0xef, 0x16, 0xfc, 0xbf, 0x9a, 0x9f, 0x88, 0x95,
	0x64, 0x9e, 0xca, 0xb7, 0xef, 0x65, 0xf1, 0xc8, 0xcf, 0x14, 0x6c, 0x21, 0xe4, 0x25, 0x38, 0x2c,
	0x17, 0x6a, 0x84, 0x54, 0x6f, 0xac, 0xf5, 0x96, 0x1d, 0xba, 0x39, 0x40, 0x1e, 0x42, 0x59, 0x6b,
	0x33, 0x3a, 0xab, 0x9b, 0xfb, 0x5b, 0xb8, 0x0f, 0xd4, 0x50, 0xc8, 0x63, 0xd8, 0x35, 0xb7, 0xd4,
	0x08, 0xaf, 0x1e, 0xb7, 0x0a, 0xdc, 0xf5, 0xca, 0xe9, 0x8a, 0xe4, 0xfe, 0xb0, 0x60, 0xaf, 0x30,
	0xd5, 0x3b, 0x99, 0x3a, 0xbd, 0x6d, 0xea, 0x30, 0xef, 0xf7, 0xfb, 0x5d, 0xfd, 0x0b, 0x73, 0x8f,
	0xf6, 0xa0, 0x5e, 0xf8, 0xc3, 0x89, 0x0d, 0x65, 0x9d, 0x6f, 0xee, 0x9c, 0xbc, 0xfb, 0x30, 0x09,
	0xb8, 0x9a, 0x2f, 0x66, 0xba, 0x42, 0x7f, 0xbe, 0x4c, 0x50, 0x86, 0xe8, 0x07, 0x28, 0xbb, 0x21,
	0x9b, 0xa5, 0xfd, 0x2f, 0xc8, 0x3e, 0xa3, 0xec, 0xfa, 0xa1, 0xea, 0xf2, 0x58, 0xa1, 0x14, 0x09,
	0x4a, 0x36, 0xe3, 0x21, 0x57, 0xcb, 0x7e, 0xf6, 0xd2, 0x99, 0xd7, 0x2d, 0xed, 0x06, 0x22, 0x03,
	0x66, 0x15, 0x83, 0x3c, 0xf9, 0x19, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x4c, 0x48, 0x72, 0x0b, 0x05,
	0x00, 0x00,
}
